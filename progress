Week 3
- method
- String method (length, isEmpty, indexOf, substring)
- ArrayList
    method (add, addAll(combine list), get, size, contains, remove, clear)
        remove and contains assume that the objects stored in the ArrayList have an equals method
    for-each (for (String print : words){ })
    ArrayList for method parameter
    ArrayList<Integer>
        remove element using numbersList.remove(Integer.valueOf(4));
        remove index numbersList.remove(4);
    ArrayList<Double>, ArrayList<Characters>
    ArrayList as return value
- collection method (sort, shuffle, reverse)
    Collection.sort(list)
    Collections.addAll(list2, 5, 10, 7);
        A shorthand for list2.add(5);
- boolean
    data type, return type

Week 4 ( + 70, 71)
- Methods and copying parameters (70, 71)
    primitive data types (int, double, char, boolean) get copied to method
    ArrayList and many other type, only the references are copied to the method
- OOP Object class
    custom object as parameter
    constructor
    modifi object variable, The state of an object is independent of the other objects!
    getter, setter
    toString
        System.out.println( andy );
            Java completes the call during runtime to the format:
            System.out.println( andy.toString() );
- String.format( "%.2f", value ), double decimal
- Build a clock (interesting project)
- Random class
    nextInt, nextDouble
- toString
- explicit type conversion. avg = (double)sum/count
- tips, assign object variable in constructor

Week 5
- Multiple constructors / constructor overloading, different parameter
    Calling another constructor in the same class
        { this(name, 0); }
- Method overloading, different parameter
- Object is at the end of a wire, just like ArrayList
    copy a variable that refers to an object
- NullPointerException
- Custom object as parameter
- Exercise 86: Lyyra card and Cash Register. Very helpful
- The date as an object
- Comparing 2 object
- Objects on a list, ArrayList
- Object as another object variable (Example : person object has birth date object)
- A list of objects within an object,
    private ArrayList<Person> members;
- Method returns an object
- Comparing date using custom MyDate object
